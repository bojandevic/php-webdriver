{"name":"Php-webdriver","tagline":"Selenium Webdriver bindings for PHP","body":"Introduction\r\n============\r\n<i>This is a fork of [PHP WebDriver bindings](https://code.google.com/p/php-webdriver-bindings/)</i><br />\r\nThis is site for developers of PHP bindings for Selenium WebDriver. This PHP library allows creating functional webdriver tests with PHP.\r\n\r\nDetails\r\n-------\r\nLibrary comunicates with Selenium Server using [JsonWireProtocol](https://code.google.com/p/selenium/wiki/JsonWireProtocol). Requires curl in PHP. List of implemented methods: implemented_methods.\r\n\r\nExample\r\n-------\r\n<pre>\r\n<code>\r\n   require_once \"WebDriver.php\";\r\n\r\n   $webdriver = new WebDriver(\"localhost\", \"4444\");\r\n   $webdriver->connect(\"firefox\");                            \r\n   $webdriver->get(\"http://google.com\");\r\n   $element = $webdriver->findElementBy(WebDriver::LOCATOR_NAME, \"q\");\r\n   $element->sendKeys(array(\"webdriver\" ) );\r\n   $element->submit();\r\n\r\n   $webdriver->close();\r\n</code>\r\n</pre>\r\n###Combobox handling###\r\n<pre>\r\n<code>\r\n   $this->webdriver->get($this->test_url);\r\n   $element = $this->webdriver->findElementBy(WebDriver::LOCATOR_NAME, \"sel1\");\r\n   $option3 = $element->findOptionElementByText(\"option 3\");\r\n   $option3->click();\r\n   $this->assertTrue($option3->isSelected());\r\n\r\n   $option2 = $element->findOptionElementByValue(\"2\");\r\n   $option2->click();\r\n   $this->assertFalse($option3->isSelected());\r\n   $this->assertTrue($option2->isSelected());\r\n</code>\r\n</pre>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}